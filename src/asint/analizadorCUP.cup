package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexico;
import alex.UnidadLexica;
import errors.GestionErrores;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private GestionErrores errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErrores();
   AnalizadorLexico alex = (AnalizadorLexico)getScanner();
   alex.fijaGestionErrores(errores);
:};


terminal   	IDEN, ENT, REAL, PAP, PCIERRE, IGUAL, EQUIVALENTE, PUNTOCOMA,
			MAYOR, MENOR, MAYIGUAL, MENIGUAL, MAS, AND, OR, NOT, MENOS, POR, DIV, SEPARADOR, DIFERENTE, NUM, BOOL, TRUE, FALSE;
			
non terminal  S, LDs, D, LD2, D2, E0, E1, E2, E3, E4, E5, T, OP0, OP2, OP3;

S   ::= LDs SEPARADOR LD2 ;
LDs ::= LDs PUNTOCOMA D | D ;
D   ::= T IDEN ;
LD2 ::= LD2 PUNTOCOMA D2 | D2 ;
D2   ::= IDEN IGUAL E0 ;

E0  ::= E0 OP0 E1  | E1 ;
E1  ::= E2 AND E1  | E2 OR E2 | E2;
E2  ::= E3 OP2 E3  | E3 ;
E3  ::= E3 OP3 E4  | E4 ;
E4  ::= MENOS E4 | NOT E4 | E5 ;
E5  ::= ENT  | REAL  | IDEN  | TRUE | FALSE | PAP E0 PCIERRE ; 

T 	::= NUM | BOOL ;
OP0 ::= MAS  | MENOS ;
OP2 ::= MAYOR  | MENOR | MAYIGUAL | MENIGUAL | EQUIVALENTE | DIFERENTE ;
OP3 ::= POR | DIV ;

			


